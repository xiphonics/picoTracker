/*
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Copyright (c) 2024 xiphonics, inc.
 *
 * This file is part of the picoTracker firmware
 */

/*
    MIT License
    Copyright (c) 2018-2019, Alexey Dynda
    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to
   deal in the Software without restriction, including without limitation the
   rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
   sell copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:
    The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED
   "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
   LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
   PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
   ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
/*
 * ssd1306xled_font8x16 is by Neven Boyanov
 *
 * @created: 2014-08-12
 * @author: Neven Boyanov
 *
 * Copyright (c) 2015 Neven Boyanov, Tinusaur Team. All Rights Reserved.
 * Distributed as open source software under MIT License, see LICENSE.txt file.
 * Please, as a favour, retain the link http://tinusaur.org to The Tinusaur
 * Project.
 *
 * Source code available at: https://bitbucket.org/tinusaur/ssd1306xled
 *
 */

/* Source:
 * https://github.com/lexus2k/ssd1306/blob/master/src/ssd1306_fonts.c
 */

#include <stdint.h>

// Font (public domain): https://github.com/dhepper/font8x8
// TODO: optimize by having the characters on a bitstream array already
// like in Adapters/SDL/GUI/SDLGUIWindowImp.cpp

// Same font as above but formatted to be displaced 1 bit right and down
// Intended to be used on a 10x10 grid and have at least 1px free in each
// direction
static const uint16_t font8x8shift[95][10] = {
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+0020 (space)
    {0x0000, 0x0030, 0x0078, 0x0078, 0x0030, 0x0030, 0x0000, 0x0030, 0x0000,
     0x0000}, // U+0021 (!)
    {0x0000, 0x006C, 0x006C, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+0022 (")
    {0x0000, 0x006C, 0x006C, 0x00FE, 0x006C, 0x00FE, 0x006C, 0x006C, 0x0000,
     0x0000}, // U+0023 (#)
    {0x0000, 0x0018, 0x007C, 0x0006, 0x003C, 0x0060, 0x003E, 0x0018, 0x0000,
     0x0000}, // U+0024 ($)
    {0x0000, 0x0000, 0x00C6, 0x0066, 0x0030, 0x0018, 0x00CC, 0x00C6, 0x0000,
     0x0000}, // U+0025 (%)
    {0x0000, 0x0038, 0x006C, 0x0038, 0x00DC, 0x0076, 0x0066, 0x00DC, 0x0000,
     0x0000}, // U+0026 (&)
    {0x0000, 0x000C, 0x000C, 0x0006, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+0027 (')
    {0x0000, 0x0030, 0x0018, 0x000C, 0x000C, 0x000C, 0x0018, 0x0030, 0x0000,
     0x0000}, // U+0028 (()
    {0x0000, 0x000C, 0x0018, 0x0030, 0x0030, 0x0030, 0x0018, 0x000C, 0x0000,
     0x0000}, // U+0029 ())
    {0x0000, 0x0000, 0x00CC, 0x0078, 0x01FE, 0x0078, 0x00CC, 0x0000, 0x0000,
     0x0000}, // U+002A (*)
    {0x0000, 0x0000, 0x0018, 0x0018, 0x007E, 0x0018, 0x0018, 0x0000, 0x0000,
     0x0000}, // U+002B (+)
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0018, 0x0018, 0x000C,
     0x0000}, // U+002C (
    {0x0000, 0x0000, 0x0000, 0x0000, 0x007E, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+002D (-)
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0018, 0x0018, 0x0000,
     0x0000}, // U+002E (.)
    {0x0000, 0x00C0, 0x0060, 0x0030, 0x0018, 0x000C, 0x0006, 0x0002, 0x0000,
     0x0000}, // U+002F (/)
    {0x0000, 0x007C, 0x00C6, 0x00E6, 0x00F6, 0x00DE, 0x00CE, 0x007C, 0x0000,
     0x0000}, // U+0030 (0)
    {0x0000, 0x0018, 0x001C, 0x0018, 0x0018, 0x0018, 0x0018, 0x007E, 0x0000,
     0x0000}, // U+0031 (1)
    {0x0000, 0x003C, 0x0066, 0x0060, 0x0038, 0x000C, 0x0066, 0x007E, 0x0000,
     0x0000}, // U+0032 (2)
    {0x0000, 0x003C, 0x0066, 0x0060, 0x0038, 0x0060, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0033 (3)
    {0x0000, 0x0070, 0x0078, 0x006C, 0x0066, 0x00FE, 0x0060, 0x00F0, 0x0000,
     0x0000}, // U+0034 (4)
    {0x0000, 0x007E, 0x0006, 0x003E, 0x0060, 0x0060, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0035 (5)
    {0x0000, 0x0038, 0x000C, 0x0006, 0x003E, 0x0066, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0036 (6)
    {0x0000, 0x007E, 0x0066, 0x0060, 0x0030, 0x0018, 0x0018, 0x0018, 0x0000,
     0x0000}, // U+0037 (7)
    {0x0000, 0x003C, 0x0066, 0x0066, 0x003C, 0x0066, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0038 (8)
    {0x0000, 0x003C, 0x0066, 0x0066, 0x007C, 0x0060, 0x0030, 0x001C, 0x0000,
     0x0000}, // U+0039 (9)
    {0x0000, 0x0000, 0x0018, 0x0018, 0x0000, 0x0000, 0x0018, 0x0018, 0x0000,
     0x0000}, // U+003A (:)
    {0x0000, 0x0000, 0x0018, 0x0018, 0x0000, 0x0000, 0x0018, 0x0018, 0x000C,
     0x0000}, // U+003B (;)
    {0x0000, 0x0030, 0x0018, 0x000C, 0x0006, 0x000C, 0x0018, 0x0030, 0x0000,
     0x0000}, // U+003C (<)
    {0x0000, 0x0000, 0x0000, 0x007E, 0x0000, 0x0000, 0x007E, 0x0000, 0x0000,
     0x0000}, // U+003D (=)
    {0x0000, 0x000C, 0x0018, 0x0030, 0x0060, 0x0030, 0x0018, 0x000C, 0x0000,
     0x0000}, // U+003E (>)
    {0x0000, 0x003C, 0x0066, 0x0060, 0x0030, 0x0018, 0x0000, 0x0018, 0x0000,
     0x0000}, // U+003F (?)
    {0x0000, 0x007C, 0x00C6, 0x00F6, 0x00F6, 0x00F6, 0x0006, 0x003C, 0x0000,
     0x0000}, // U+0040 (@)
    {0x0000, 0x0018, 0x003C, 0x0066, 0x0066, 0x007E, 0x0066, 0x0066, 0x0000,
     0x0000}, // U+0041 (A)
    {0x0000, 0x007E, 0x00CC, 0x00CC, 0x007C, 0x00CC, 0x00CC, 0x007E, 0x0000,
     0x0000}, // U+0042 (B)
    {0x0000, 0x0078, 0x00CC, 0x0006, 0x0006, 0x0006, 0x00CC, 0x0078, 0x0000,
     0x0000}, // U+0043 (C)
    {0x0000, 0x003E, 0x006C, 0x00CC, 0x00CC, 0x00CC, 0x006C, 0x003E, 0x0000,
     0x0000}, // U+0044 (D)
    {0x0000, 0x00FE, 0x008C, 0x002C, 0x003C, 0x002C, 0x008C, 0x00FE, 0x0000,
     0x0000}, // U+0045 (E)
    {0x0000, 0x00FE, 0x008C, 0x002C, 0x003C, 0x002C, 0x000C, 0x001E, 0x0000,
     0x0000}, // U+0046 (F)
    {0x0000, 0x0078, 0x00CC, 0x0006, 0x0006, 0x00E6, 0x00CC, 0x00F8, 0x0000,
     0x0000}, // U+0047 (G)
    {0x0000, 0x0066, 0x0066, 0x0066, 0x007E, 0x0066, 0x0066, 0x0066, 0x0000,
     0x0000}, // U+0048 (H)
    {0x0000, 0x003C, 0x0018, 0x0018, 0x0018, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+0049 (I)
    {0x0000, 0x00F0, 0x0060, 0x0060, 0x0060, 0x0066, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+004A (J)
    {0x0000, 0x00CE, 0x00CC, 0x006C, 0x003C, 0x006C, 0x00CC, 0x00CE, 0x0000,
     0x0000}, // U+004B (K)
    {0x0000, 0x001E, 0x000C, 0x000C, 0x000C, 0x008C, 0x00CC, 0x00FE, 0x0000,
     0x0000}, // U+004C (L)
    {0x0000, 0x00C6, 0x00EE, 0x00FE, 0x00FE, 0x00D6, 0x00C6, 0x00C6, 0x0000,
     0x0000}, // U+004D (M)
    {0x0000, 0x00C6, 0x00CE, 0x00DE, 0x00F6, 0x00E6, 0x00C6, 0x00C6, 0x0000,
     0x0000}, // U+004E (N)
    {0x0000, 0x0038, 0x006C, 0x00C6, 0x00C6, 0x00C6, 0x006C, 0x0038, 0x0000,
     0x0000}, // U+004F (O)
    {0x0000, 0x007E, 0x00CC, 0x00CC, 0x007C, 0x000C, 0x000C, 0x001E, 0x0000,
     0x0000}, // U+0050 (P)
    {0x0000, 0x003C, 0x0066, 0x0066, 0x0066, 0x0076, 0x003C, 0x0070, 0x0000,
     0x0000}, // U+0051 (Q)
    {0x0000, 0x007E, 0x00CC, 0x00CC, 0x007C, 0x006C, 0x00CC, 0x00CE, 0x0000,
     0x0000}, // U+0052 (R)
    {0x0000, 0x003C, 0x0066, 0x000E, 0x001C, 0x0070, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0053 (S)
    {0x0000, 0x007E, 0x005A, 0x0018, 0x0018, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+0054 (T)
    {0x0000, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x007E, 0x0000,
     0x0000}, // U+0055 (U)
    {0x0000, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x003C, 0x0018, 0x0000,
     0x0000}, // U+0056 (V)
    {0x0000, 0x00C6, 0x00C6, 0x00C6, 0x00D6, 0x00FE, 0x00EE, 0x00C6, 0x0000,
     0x0000}, // U+0057 (W)
    {0x0000, 0x00C6, 0x00C6, 0x006C, 0x0038, 0x0038, 0x006C, 0x00C6, 0x0000,
     0x0000}, // U+0058 (X)
    {0x0000, 0x0066, 0x0066, 0x0066, 0x003C, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+0059 (Y)
    {0x0000, 0x00FE, 0x00C6, 0x0062, 0x0030, 0x0098, 0x00CC, 0x00FE, 0x0000,
     0x0000}, // U+005A (Z)
    {0x0000, 0x003C, 0x000C, 0x000C, 0x000C, 0x000C, 0x000C, 0x003C, 0x0000,
     0x0000}, // U+005B ([)
    {0x0000, 0x0006, 0x000C, 0x0018, 0x0030, 0x0060, 0x00C0, 0x0080, 0x0000,
     0x0000}, // U+005C (\)
    {0x0000, 0x003C, 0x0030, 0x0030, 0x0030, 0x0030, 0x0030, 0x003C, 0x0000,
     0x0000}, // U+005D (])
    {0x0000, 0x0010, 0x0038, 0x006C, 0x00C6, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+005E (^)
    {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x01FE,
     0x0000}, // U+005F (_)
    {0x0000, 0x0018, 0x0018, 0x0030, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+0060 (`)
    {0x0000, 0x0000, 0x0000, 0x003C, 0x0060, 0x007C, 0x0066, 0x00DC, 0x0000,
     0x0000}, // U+0061 (a)
    {0x0000, 0x000E, 0x000C, 0x000C, 0x007C, 0x00CC, 0x00CC, 0x0076, 0x0000,
     0x0000}, // U+0062 (b)
    {0x0000, 0x0000, 0x0000, 0x003C, 0x0066, 0x0006, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+0063 (c)
    {0x0000, 0x0070, 0x0060, 0x0060, 0x007C, 0x0066, 0x0066, 0x00DC, 0x0000,
     0x0000}, // U+0064 (d)
    {0x0000, 0x0000, 0x0000, 0x003C, 0x0066, 0x007E, 0x0006, 0x003C, 0x0000,
     0x0000}, // U+0065 (e)
    {0x0000, 0x0038, 0x006C, 0x000C, 0x001E, 0x000C, 0x000C, 0x001E, 0x0000,
     0x0000}, // U+0066 (f)
    {0x0000, 0x0000, 0x0000, 0x00DC, 0x0066, 0x0066, 0x007C, 0x0060, 0x003E,
     0x0000}, // U+0067 (g)
    {0x0000, 0x000E, 0x000C, 0x006C, 0x00DC, 0x00CC, 0x00CC, 0x00CE, 0x0000,
     0x0000}, // U+0068 (h)
    {0x0000, 0x0018, 0x0000, 0x001C, 0x0018, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+0069 (i)
    {0x0000, 0x0060, 0x0000, 0x0060, 0x0060, 0x0060, 0x0066, 0x0066, 0x003C,
     0x0000}, // U+006A (j)
    {0x0000, 0x000E, 0x000C, 0x00CC, 0x006C, 0x003C, 0x006C, 0x00CE, 0x0000,
     0x0000}, // U+006B (k)
    {0x0000, 0x001C, 0x0018, 0x0018, 0x0018, 0x0018, 0x0018, 0x003C, 0x0000,
     0x0000}, // U+006C (l)
    {0x0000, 0x0000, 0x0000, 0x0066, 0x00FE, 0x00FE, 0x00D6, 0x00C6, 0x0000,
     0x0000}, // U+006D (m)
    {0x0000, 0x0000, 0x0000, 0x003E, 0x0066, 0x0066, 0x0066, 0x0066, 0x0000,
     0x0000}, // U+006E (n)
    {0x0000, 0x0000, 0x0000, 0x003C, 0x0066, 0x0066, 0x0066, 0x003C, 0x0000,
     0x0000}, // U+006F (o)
    {0x0000, 0x0000, 0x0000, 0x0076, 0x00CC, 0x00CC, 0x007C, 0x000C, 0x001E,
     0x0000}, // U+0070 (p)
    {0x0000, 0x0000, 0x0000, 0x00DC, 0x0066, 0x0066, 0x007C, 0x0060, 0x00F0,
     0x0000}, // U+0071 (q)
    {0x0000, 0x0000, 0x0000, 0x0076, 0x00DC, 0x00CC, 0x000C, 0x001E, 0x0000,
     0x0000}, // U+0072 (r)
    {0x0000, 0x0000, 0x0000, 0x007C, 0x0006, 0x003C, 0x0060, 0x003E, 0x0000,
     0x0000}, // U+0073 (s)
    {0x0000, 0x0010, 0x0018, 0x007C, 0x0018, 0x0018, 0x0058, 0x0030, 0x0000,
     0x0000}, // U+0074 (t)
    {0x0000, 0x0000, 0x0000, 0x0066, 0x0066, 0x0066, 0x0066, 0x00DC, 0x0000,
     0x0000}, // U+0075 (u)
    {0x0000, 0x0000, 0x0000, 0x0066, 0x0066, 0x0066, 0x003C, 0x0018, 0x0000,
     0x0000}, // U+0076 (v)
    {0x0000, 0x0000, 0x0000, 0x00C6, 0x00D6, 0x00FE, 0x00FE, 0x006C, 0x0000,
     0x0000}, // U+0077 (w)
    {0x0000, 0x0000, 0x0000, 0x00C6, 0x006C, 0x0038, 0x006C, 0x00C6, 0x0000,
     0x0000}, // U+0078 (x)
    {0x0000, 0x0000, 0x0000, 0x0066, 0x0066, 0x0066, 0x007C, 0x0060, 0x003E,
     0x0000}, // U+0079 (y)
    {0x0000, 0x0000, 0x0000, 0x007E, 0x0032, 0x0018, 0x004C, 0x007E, 0x0000,
     0x0000}, // U+007A (z)
    {0x0000, 0x0070, 0x0018, 0x0018, 0x000E, 0x0018, 0x0018, 0x0070, 0x0000,
     0x0000}, // U+007B ({)
    {0x0000, 0x0030, 0x0030, 0x0030, 0x0000, 0x0030, 0x0030, 0x0030, 0x0000,
     0x0000}, // U+007C (|)
    {0x0000, 0x000E, 0x0018, 0x0018, 0x0070, 0x0018, 0x0018, 0x000E, 0x0000,
     0x0000}, // U+007D (})
    {0x0000, 0x00DC, 0x0076, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
     0x0000}, // U+007E (~)
};

// Hourglass font from https://damieng.com/zx-origins
// used with permission the acknowledgement is included in credits
// converted to left-to-right pixel format
static const uint16_t FONT_HOURGLASS_BITMAP[96][10] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //
    {0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x00, 0x00}, // !
    {0x00, 0x14, 0x14, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // "
    {0x00, 0x14, 0x14, 0x3E, 0x14, 0x3E, 0x14, 0x14, 0x00, 0x00}, // #
    {0x00, 0x08, 0x3C, 0x0A, 0x1C, 0x28, 0x1E, 0x08, 0x00, 0x00}, // $
    {0x00, 0x26, 0x16, 0x10, 0x08, 0x04, 0x34, 0x32, 0x00, 0x00}, // %
    {0x00, 0x1C, 0x02, 0x02, 0x3C, 0x12, 0x12, 0x3C, 0x00, 0x00}, // &
    {0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // '
    {0x00, 0x10, 0x08, 0x04, 0x04, 0x04, 0x08, 0x10, 0x00, 0x00}, // (
    {0x00, 0x04, 0x08, 0x10, 0x10, 0x10, 0x08, 0x04, 0x00, 0x00}, // )
    {0x00, 0x00, 0x08, 0x2A, 0x1C, 0x2A, 0x08, 0x00, 0x00, 0x00}, // *
    {0x00, 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00}, // +
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x02, 0x00}, // ,
    {0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00}, // -
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00}, // .
    {0x00, 0x20, 0x20, 0x10, 0x08, 0x04, 0x02, 0x02, 0x00, 0x00}, // /
    {0x00, 0x1C, 0x22, 0x32, 0x2A, 0x26, 0x22, 0x1C, 0x00, 0x00}, // 0
    {0x00, 0x08, 0x0C, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00, 0x00}, // 1
    {0x00, 0x1C, 0x22, 0x20, 0x10, 0x08, 0x04, 0x3E, 0x00, 0x00}, // 2
    {0x00, 0x3E, 0x20, 0x10, 0x18, 0x20, 0x20, 0x1E, 0x00, 0x00}, // 3
    {0x00, 0x30, 0x28, 0x24, 0x22, 0x3E, 0x20, 0x20, 0x00, 0x00}, // 4
    {0x00, 0x3E, 0x02, 0x02, 0x1E, 0x20, 0x20, 0x1E, 0x00, 0x00}, // 5
    {0x00, 0x18, 0x04, 0x02, 0x1E, 0x22, 0x22, 0x1C, 0x00, 0x00}, // 6
    {0x00, 0x3E, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00}, // 7
    {0x00, 0x1C, 0x22, 0x22, 0x1C, 0x22, 0x22, 0x1C, 0x00, 0x00}, // 8
    {0x00, 0x1C, 0x22, 0x22, 0x3C, 0x20, 0x10, 0x0C, 0x00, 0x00}, // 9
    {0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x08, 0x08, 0x00, 0x00}, // :
    {0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x08, 0x08, 0x04, 0x00}, // ;
    {0x00, 0x20, 0x10, 0x08, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00}, // <
    {0x00, 0x00, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00}, // =
    {0x00, 0x04, 0x08, 0x10, 0x20, 0x10, 0x08, 0x04, 0x00, 0x00}, // >
    {0x00, 0x1C, 0x20, 0x20, 0x10, 0x08, 0x00, 0x08, 0x00, 0x00}, // ?
    {0x00, 0x38, 0x44, 0x72, 0x4A, 0x4A, 0x72, 0x04, 0x78, 0x00}, // @
    {0x00, 0x08, 0x08, 0x14, 0x14, 0x3E, 0x22, 0x22, 0x00, 0x00}, // A
    {0x00, 0x1E, 0x22, 0x22, 0x1E, 0x22, 0x22, 0x1E, 0x00, 0x00}, // B
    {0x00, 0x1C, 0x22, 0x02, 0x02, 0x02, 0x22, 0x1C, 0x00, 0x00}, // C
    {0x00, 0x1E, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1E, 0x00, 0x00}, // D
    {0x00, 0x3E, 0x02, 0x02, 0x1E, 0x02, 0x02, 0x3E, 0x00, 0x00}, // E
    {0x00, 0x3E, 0x02, 0x02, 0x1E, 0x02, 0x02, 0x02, 0x00, 0x00}, // F
    {0x00, 0x3C, 0x02, 0x02, 0x32, 0x22, 0x22, 0x3C, 0x00, 0x00}, // G
    {0x00, 0x22, 0x22, 0x22, 0x3E, 0x22, 0x22, 0x22, 0x00, 0x00}, // H
    {0x00, 0x1C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00, 0x00}, // I
    {0x00, 0x20, 0x20, 0x20, 0x20, 0x22, 0x22, 0x1C, 0x00, 0x00}, // J
    {0x00, 0x22, 0x12, 0x0A, 0x06, 0x0A, 0x12, 0x22, 0x00, 0x00}, // K
    {0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x3E, 0x00, 0x00}, // L
    {0x00, 0x41, 0x63, 0x55, 0x49, 0x49, 0x41, 0x41, 0x00, 0x00}, // M
    {0x00, 0x22, 0x26, 0x2A, 0x32, 0x22, 0x22, 0x22, 0x00, 0x00}, // N
    {0x00, 0x1C, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00, 0x00}, // O
    {0x00, 0x1E, 0x22, 0x22, 0x1E, 0x02, 0x02, 0x02, 0x00, 0x00}, // P
    {0x00, 0x1C, 0x22, 0x22, 0x22, 0x2A, 0x12, 0x2C, 0x20, 0x00}, // Q
    {0x00, 0x1E, 0x22, 0x22, 0x1E, 0x0A, 0x12, 0x22, 0x00, 0x00}, // R
    {0x00, 0x3C, 0x02, 0x02, 0x1C, 0x20, 0x20, 0x1E, 0x00, 0x00}, // S
    {0x00, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00}, // T
    {0x00, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00, 0x00}, // U
    {0x00, 0x22, 0x22, 0x22, 0x14, 0x14, 0x08, 0x08, 0x00, 0x00}, // V
    {0x00, 0x49, 0x49, 0x55, 0x55, 0x22, 0x22, 0x22, 0x00, 0x00}, // W
    {0x00, 0x22, 0x22, 0x14, 0x08, 0x14, 0x22, 0x22, 0x00, 0x00}, // X
    {0x00, 0x22, 0x22, 0x14, 0x14, 0x08, 0x08, 0x08, 0x00, 0x00}, // Y
    {0x00, 0x3E, 0x20, 0x10, 0x08, 0x04, 0x02, 0x3E, 0x00, 0x00}, // Z
    {0x00, 0x3C, 0x04, 0x04, 0x04, 0x04, 0x04, 0x3C, 0x00, 0x00}, // [
    {0x00, 0x02, 0x02, 0x04, 0x08, 0x10, 0x20, 0x20, 0x00, 0x00}, /* \ */
    {0x00, 0x3C, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3C, 0x00, 0x00}, // ]
    {0x00, 0x08, 0x1C, 0x2A, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00}, // ^
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00}, // _
    {0x00, 0x38, 0x04, 0x04, 0x1E, 0x04, 0x04, 0x3E, 0x00, 0x00}, // £
    {0x00, 0x00, 0x1C, 0x20, 0x3C, 0x22, 0x22, 0x3C, 0x00, 0x00}, // a
    {0x00, 0x02, 0x1A, 0x26, 0x22, 0x22, 0x22, 0x1E, 0x00, 0x00}, // b
    {0x00, 0x00, 0x1C, 0x22, 0x02, 0x02, 0x22, 0x1C, 0x00, 0x00}, // c
    {0x00, 0x20, 0x2C, 0x32, 0x22, 0x22, 0x22, 0x3C, 0x00, 0x00}, // d
    {0x00, 0x00, 0x1C, 0x22, 0x3E, 0x02, 0x22, 0x1C, 0x00, 0x00}, // e
    {0x00, 0x30, 0x08, 0x3C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00}, // f
    {0x00, 0x00, 0x3C, 0x22, 0x22, 0x22, 0x3C, 0x20, 0x1C, 0x00}, // g
    {0x00, 0x02, 0x1A, 0x26, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00}, // h
    {0x00, 0x00, 0x0C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00}, // i
    {0x00, 0x00, 0x18, 0x10, 0x10, 0x10, 0x10, 0x10, 0x0C, 0x00}, // j
    {0x00, 0x04, 0x24, 0x14, 0x0C, 0x14, 0x24, 0x44, 0x00, 0x00}, // k
    {0x00, 0x0C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00}, // l
    {0x00, 0x00, 0x3F, 0x49, 0x49, 0x49, 0x49, 0x49, 0x00, 0x00}, // m
    {0x00, 0x00, 0x1E, 0x22, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00}, // n
    {0x00, 0x00, 0x1C, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00, 0x00}, // o
    {0x00, 0x00, 0x1E, 0x22, 0x22, 0x22, 0x26, 0x1A, 0x02, 0x00}, // p
    {0x00, 0x00, 0x3C, 0x22, 0x22, 0x22, 0x32, 0x2C, 0x20, 0x00}, // q
    {0x00, 0x00, 0x34, 0x0C, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00}, // r
    {0x00, 0x00, 0x3C, 0x02, 0x1C, 0x20, 0x20, 0x1E, 0x00, 0x00}, // s
    {0x00, 0x08, 0x3C, 0x08, 0x08, 0x08, 0x08, 0x30, 0x00, 0x00}, // t
    {0x00, 0x00, 0x22, 0x22, 0x22, 0x22, 0x22, 0x3C, 0x00, 0x00}, // u
    {0x00, 0x00, 0x22, 0x22, 0x14, 0x14, 0x08, 0x08, 0x00, 0x00}, // v
    {0x00, 0x00, 0x89, 0x89, 0x52, 0x5A, 0x24, 0x24, 0x00, 0x00}, // w
    {0x00, 0x00, 0x22, 0x14, 0x08, 0x08, 0x14, 0x22, 0x00, 0x00}, // x
    {0x00, 0x00, 0x22, 0x22, 0x14, 0x14, 0x08, 0x08, 0x06, 0x00}, // y
    {0x00, 0x00, 0x3C, 0x20, 0x10, 0x08, 0x04, 0x3C, 0x00, 0x00}, // z
    {0x00, 0x38, 0x08, 0x08, 0x06, 0x08, 0x08, 0x38, 0x00, 0x00}, // {
    {0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00}, // |
    {0x00, 0x0E, 0x08, 0x08, 0x30, 0x08, 0x08, 0x0E, 0x00, 0x00}, // }
    {0x00, 0x2C, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // ~
    {0x00, 0x3C, 0x42, 0x99, 0xA5, 0x85, 0xB9, 0x42, 0x3C, 0x00}  // ©
};

// You Squared font from https://damieng.com/zx-origins
// converted to left-to-right pixel format
static const uint16_t FONT_YOU_SQUARED_BITMAP[96][10] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //
    {0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x00, 0x00}, // !
    {0x00, 0x66, 0x66, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // "
    {0x00, 0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00, 0x00}, // #
    {0x00, 0x18, 0x7E, 0x06, 0x7E, 0x60, 0x7E, 0x18, 0x00, 0x00}, // $
    {0x00, 0x66, 0x66, 0x30, 0x18, 0x0C, 0x66, 0x66, 0x00, 0x00}, // %
    {0x00, 0x3E, 0x06, 0x66, 0x7C, 0x66, 0x66, 0x7E, 0x00, 0x00}, // &
    {0x00, 0x18, 0x18, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // '
    {0x00, 0x38, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x38, 0x00, 0x00}, // (
    {0x00, 0x1C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x1C, 0x00, 0x00}, // )
    {0x00, 0x00, 0x14, 0x1C, 0x3E, 0x1C, 0x14, 0x00, 0x00, 0x00}, // *
    {0x00, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00, 0x00}, // +
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x1C, 0x00}, // ,
    {0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00}, // -
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00}, // .
    {0x00, 0x60, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x06, 0x00, 0x00}, // /
    {0x00, 0x7E, 0x66, 0x76, 0x7E, 0x6E, 0x66, 0x7E, 0x00, 0x00}, // 0
    {0x00, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00}, // 1
    {0x00, 0x7E, 0x66, 0x60, 0x7E, 0x06, 0x06, 0x7E, 0x00, 0x00}, // 2
    {0x00, 0x7E, 0x66, 0x60, 0x38, 0x60, 0x66, 0x7E, 0x00, 0x00}, // 3
    {0x00, 0x3E, 0x36, 0x36, 0x36, 0x7E, 0x30, 0x30, 0x00, 0x00}, // 4
    {0x00, 0x7E, 0x06, 0x7E, 0x60, 0x60, 0x66, 0x7E, 0x00, 0x00}, // 5
    {0x00, 0x7E, 0x66, 0x06, 0x7E, 0x66, 0x66, 0x7E, 0x00, 0x00}, // 6
    {0x00, 0x7E, 0x66, 0x60, 0x78, 0x60, 0x60, 0x60, 0x00, 0x00}, // 7
    {0x00, 0x7E, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x7E, 0x00, 0x00}, // 8
    {0x00, 0x7E, 0x66, 0x66, 0x7E, 0x60, 0x66, 0x7E, 0x00, 0x00}, // 9
    {0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00}, // :
    {0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x1C, 0x00}, // ;
    {0x00, 0x00, 0x30, 0x18, 0x0C, 0x0C, 0x18, 0x30, 0x00, 0x00}, // <
    {0x00, 0x00, 0x00, 0x7F, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00}, // =
    {0x00, 0x00, 0x0C, 0x18, 0x30, 0x30, 0x18, 0x0C, 0x00, 0x00}, // >
    {0x00, 0x7E, 0x66, 0x60, 0x78, 0x18, 0x00, 0x18, 0x00, 0x00}, // ?
    {0x00, 0x7E, 0x66, 0x76, 0x76, 0x76, 0x06, 0x7E, 0x00, 0x00}, // @
    {0x00, 0x7E, 0x66, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x00, 0x00}, // A
    {0x00, 0x7E, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x7E, 0x00, 0x00}, // B
    {0x00, 0x7E, 0x66, 0x06, 0x06, 0x06, 0x66, 0x7E, 0x00, 0x00}, // C
    {0x00, 0x3E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3E, 0x00, 0x00}, // D
    {0x00, 0x7E, 0x06, 0x06, 0x3E, 0x06, 0x06, 0x7E, 0x00, 0x00}, // E
    {0x00, 0x7E, 0x06, 0x06, 0x3E, 0x06, 0x06, 0x06, 0x00, 0x00}, // F
    {0x00, 0x7E, 0x66, 0x06, 0x76, 0x66, 0x66, 0x7E, 0x00, 0x00}, // G
    {0x00, 0x66, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x00, 0x00}, // H
    {0x00, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00}, // I
    {0x00, 0x60, 0x60, 0x60, 0x60, 0x66, 0x66, 0x7E, 0x00, 0x00}, // J
    {0x00, 0x66, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x66, 0x00, 0x00}, // K
    {0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x7E, 0x00, 0x00}, // L
    {0x00, 0x7F, 0x6B, 0x6B, 0x6B, 0x63, 0x63, 0x63, 0x00, 0x00}, // M
    {0x00, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00}, // N
    {0x00, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7E, 0x00, 0x00}, // O
    {0x00, 0x7E, 0x66, 0x66, 0x66, 0x7E, 0x06, 0x06, 0x00, 0x00}, // P
    {0x00, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3E, 0x70, 0x00}, // Q
    {0x00, 0x7E, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x66, 0x00, 0x00}, // R
    {0x00, 0x7E, 0x66, 0x06, 0x7E, 0x60, 0x66, 0x7E, 0x00, 0x00}, // S
    {0x00, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00}, // T
    {0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7E, 0x00, 0x00}, // U
    {0x00, 0x66, 0x66, 0x66, 0x66, 0x36, 0x1E, 0x0E, 0x00, 0x00}, // V
    {0x00, 0x63, 0x63, 0x63, 0x6B, 0x6B, 0x6B, 0x7F, 0x00, 0x00}, // W
    {0x00, 0x66, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x66, 0x00, 0x00}, // X
    {0x00, 0x66, 0x66, 0x66, 0x7E, 0x18, 0x18, 0x18, 0x00, 0x00}, // Y
    {0x00, 0x7E, 0x66, 0x30, 0x18, 0x0C, 0x66, 0x7E, 0x00, 0x00}, // Z
    {0x00, 0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C, 0x00, 0x00}, // [
    {0x00, 0x06, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x60, 0x00, 0x00}, /* \*/
    {0x00, 0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x00, 0x00}, // ]
    {0x00, 0x08, 0x1C, 0x3E, 0x7F, 0x1C, 0x1C, 0x1C, 0x00, 0x00}, // ^
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00}, // _
    {0x00, 0x7E, 0x66, 0x06, 0x1E, 0x06, 0x06, 0x7E, 0x00, 0x00}, // £
    {0x00, 0x00, 0x00, 0x7E, 0x60, 0x7E, 0x66, 0x7E, 0x00, 0x00}, // a
    {0x00, 0x06, 0x06, 0x7E, 0x66, 0x66, 0x66, 0x7E, 0x00, 0x00}, // b
    {0x00, 0x00, 0x00, 0x7E, 0x66, 0x06, 0x66, 0x7E, 0x00, 0x00}, // c
    {0x00, 0x60, 0x60, 0x7E, 0x66, 0x66, 0x66, 0x7E, 0x00, 0x00}, // d
    {0x00, 0x00, 0x00, 0x7E, 0x66, 0x7E, 0x06, 0x7E, 0x00, 0x00}, // e
    {0x00, 0x00, 0x7C, 0x0C, 0x0C, 0x3E, 0x0C, 0x0C, 0x0C, 0x00}, // f
    {0x00, 0x00, 0x00, 0x7E, 0x66, 0x66, 0x7E, 0x60, 0x7E, 0x00}, // g
    {0x00, 0x06, 0x06, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00}, // h
    {0x00, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00}, // i
    {0x00, 0x60, 0x00, 0x60, 0x60, 0x60, 0x60, 0x66, 0x7E, 0x00}, // j
    {0x00, 0x06, 0x06, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x00, 0x00}, // k
    {0x00, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1C, 0x00, 0x00}, // l
    {0x00, 0x00, 0x00, 0x7F, 0x6B, 0x6B, 0x6B, 0x63, 0x00, 0x00}, // m
    {0x00, 0x00, 0x00, 0x7E, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00}, // n
    {0x00, 0x00, 0x00, 0x7E, 0x66, 0x66, 0x66, 0x7E, 0x00, 0x00}, // o
    {0x00, 0x00, 0x00, 0x7E, 0x66, 0x66, 0x7E, 0x06, 0x06, 0x00}, // p
    {0x00, 0x00, 0x00, 0x7E, 0x66, 0x66, 0x7E, 0x60, 0x60, 0x00}, // q
    {0x00, 0x00, 0x00, 0x7E, 0x66, 0x06, 0x06, 0x06, 0x00, 0x00}, // r
    {0x00, 0x00, 0x00, 0x7E, 0x06, 0x7E, 0x60, 0x7E, 0x00, 0x00}, // s
    {0x00, 0x00, 0x0C, 0x7E, 0x0C, 0x0C, 0x0C, 0x7C, 0x00, 0x00}, // t
    {0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7E, 0x00, 0x00}, // u
    {0x00, 0x00, 0x00, 0x66, 0x66, 0x36, 0x1E, 0x0E, 0x00, 0x00}, // v
    {0x00, 0x00, 0x00, 0x63, 0x6B, 0x6B, 0x6B, 0x7F, 0x00, 0x00}, // w
    {0x00, 0x00, 0x00, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x00, 0x00}, // x
    {0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x7E, 0x60, 0x7E, 0x00}, // y
    {0x00, 0x00, 0x00, 0x7E, 0x30, 0x18, 0x0C, 0x7E, 0x00, 0x00}, // z
    {0x00, 0x78, 0x18, 0x18, 0x0E, 0x18, 0x18, 0x78, 0x00, 0x00}, // {
    {0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00}, // |
    {0x00, 0x1E, 0x18, 0x18, 0x70, 0x18, 0x18, 0x1E, 0x00, 0x00}, // }
    {0x00, 0x00, 0x00, 0x6E, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00}, // ~
    {0x00, 0x3C, 0x42, 0xBD, 0x8D, 0x8D, 0xBD, 0x42, 0x3C, 0x00}  // ©
};